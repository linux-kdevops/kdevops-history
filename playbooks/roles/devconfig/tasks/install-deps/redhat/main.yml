---
# Install dependenciesfor oscheck on Red Hat based systems

- name: Register system with Red Hat
  become: yes
  community.general.redhat_subscription:
    state: present
    org_id: "{{ rhel_org_id }}"
    activationkey: "{{ rhel_activation_key }}"
    force_register: true
  when:
    - rhel_org_id
    - rhel_activation_key

- name: Check whether custom repofile exists
  stat:
    path: "{{ devconfig_custom_yum_repofile }}"
  register: custom_repofile
  delegate_to: localhost
  when: devconfig_custom_yum_repofile

- name: Add custom yum repo
  become: yes
  become_method: sudo
  copy:
    src: "{{ devconfig_custom_yum_repofile }}"
    dest: "/etc/yum.repos.d/{{ devconfig_custom_yum_repofile | basename }}"
    owner: root
    group: root
    mode: 0644
  when:
    - devconfig_custom_yum_repofile
    - custom_repofile.stat.exists

- name: Refresh cache and upgrade all present packages
  become: yes
  become_method: sudo
  yum:
    update_cache: yes
    name: '*'
    state: latest
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  when:
    - devconfig_try_upgrade|bool

- name: Reboot system to make the new kernel and modules take effect
  become: yes
  become_method: sudo
  reboot:
  when:
    - devconfig_try_upgrade|bool

- name: Set epel-release package name for RHEL
  set_fact:
    epel_package:
      - "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
  when: ansible_distribution == 'RedHat'

- name: Set epel-release package name for OracleLinux
  set_fact:
    epel_package:
      - epel-release
  when: ansible_distribution == 'OracleLinux'

- name: Install epel-release
  become: yes
  become_method: sudo
  ansible.builtin.dnf:
    name: "{{ epel_package }}"
    disable_gpg_check: true
    state: present
  when: epel_package is defined

- name: Enable epel repository
  become: yes
  become_method: sudo
  command:
    argv:
      - yum-config-manager
      - --enable
      - "{{ 'ol' + ansible_facts['distribution_major_version'] + '_developer_EPEL' }}"
  when: ansible_distribution == 'OracleLinux'

- name: Build install package list
  set_fact:
    packages:
      - bison
      - flex
      - git-core
      - e2fsprogs
      - xfsprogs
      - xfsdump
      - lvm2
      - gcc
      - make
      - gawk
      - bc
      - libtool
      - psmisc
      - sed
      - vim
      - fio
      - libaio-devel
      - diffutils
      - net-tools
      - ncurses-devel
      - openssh-server
      - net-snmp
      - trace-cmd
      - perf

- name: Install btrfs-progs
  become: yes
  become_method: sudo
  yum:
    update_cache: yes
    name: "{{ packages }}"
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  vars:
    packages:
      - btrfs-progs
  when: ansible_distribution == 'Fedora'

- name: Add GNU screen to install package list
  set_fact:
    packages: "{{ packages + [ 'screen' ] }}"
  when:
    ansible_facts['os_family']|lower != 'redhat' or ansible_facts['distribution_major_version'] | int < 8

- name: Add Tmux to install package list
  set_fact:
    packages: "{{ packages + [ 'tmux' ] }}"
  when:
    ansible_facts['os_family']|lower == 'redhat' or ansible_facts['distribution_major_version'] | int >= 8

- name: Add systemd-journal-remote to install package list
  set_fact:
    packages: "{{ packages + [ 'systemd-journal-remote' ] }}"
  when:
    - devconfig_enable_systemd_journal_remote|bool
    - ansible_facts['os_family']|lower == 'redhat' or ansible_facts['distribution_major_version'] | int >= 8
  tags: journal-upload

- name: Install packages we typically care about
  become: yes
  become_method: sudo
  yum:
    update_cache: yes
    name: "{{ packages }}"
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  when:
    - devconfig_try_install_kdevtools|bool

- name: Set up snmp
  become: yes
  become_method: sudo
  template:
    src: snmpd.conf
    dest: /etc/snmp/snmpd.conf
  when:
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Set up snmp
  become: yes
  become_method: sudo
  template:
    src: snmpd.conf
    dest: /etc/snmp/snmpd.conf
  when:
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Enable snmpd service
  become: yes
  become_method: sudo
  systemd:
    name: snmpd
    enabled: yes
    masked: no
  tags: snmpd
  when:
    - devconfig_try_install_kdevtools|bool

- name: Start snmpd service
  become: yes
  become_method: sudo
  systemd:
    name: snmpd
    state: restarted
  tags: snmpd
  when:
    - devconfig_try_install_kdevtools|bool

- name: Install systemd-journal-remote
  become: yes
  become_method: sudo
  yum:
    update_cache: yes
    name: "systemd-journal-remote"
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  when:
    - devconfig_enable_systemd_journal_remote|bool
    - ansible_facts['os_family']|lower == 'redhat' or ansible_facts['distribution_major_version'] | int >= 8
  tags: journal

- name: Install systemd-timesyncd
  become: yes
  become_method: sudo
  yum:
    update_cache: yes
    name: systemd-udev
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  when:
    - devconfig_enable_systemd_timesyncd|bool
  tags: timesyncd
