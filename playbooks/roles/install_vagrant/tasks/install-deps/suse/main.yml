---
- name: Set generic SUSE specific distro facts
  set_fact:
    is_sle: '{{ (ansible_distribution == "SLES") or (ansible_distribution == "SLED") }}'
    is_leap: '{{ "Leap" in ansible_distribution }}'
    is_tumbleweed: '{{ "openSUSE Tumbleweed" == ansible_distribution }}'

- name: Verify vagrant installation
  command: "which vagrant"
  register: vagrant_present
  changed_when: vagrant_present.rc == 1
  failed_when: vagrant_present.rc != 0 and vagrant_present.rc != 1
  tags: [ 'vagrant', 'verify' ]

- name: "Add the following development opensuse projects"
  include_tasks: ./add_obs_repo.yml
  vars:
    obs_project_name: "{{ item.name }}"
    obs_project_gpg_key: "{{ item.key }}"
  loop:
    - name: "devel:languages:ruby:extensions"
      key: files/ruby_extensions_devel_key.pub
    - name: "Virtualization:vagrant"
      key: files/vagrant.pub
  when:
    - not force_install_if_present|bool
    - not force_install_zip|bool
    - vagrant_present.rc != 0
    - is_sle or is_leap

- name: Install vagrant and vagrant-libvirt from opensuse repository
  become: yes
  become_method: sudo
  zypper:
    name:
      - vagrant
      - vagrant-libvirt
    extra_args: '--allow-vendor-change'
    state: latest
    disable_recommends: no
  when:
    - not force_install_zip|bool
    - not force_install_if_present|bool
    - vagrant_present.rc != 0
    - is_sle or is_leap

- name: Install vagrant and vagrant-libvirt from your tumbleweed repository
  become: yes
  become_method: sudo
  zypper:
    name:
      - vagrant
      - vagrant-libvirt
  when:
    - not force_install_zip|bool
    - not force_install_if_present|bool
    - vagrant_present.rc != 0
    - is_tumbleweed

- name: Download Vagrant from the latest release and install locally
  become: yes
  become_method: sudo
  unarchive:
    src: https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_linux_amd64.zip
    dest: /usr/local/bin
    remote_src: yes
  when:
    - force_install_zip|bool
    - force_install_if_present|bool or vagrant_present.rc != 0

# This is a major heck, alas, vagrant plugin subset commands do not have any
# easy way to confirm if a plugin is installed in a straight forward way.
# Otherwise, we'd install vagrant-libvirt without checking, and even if
# that is installed the latest version, this takes *forever*.
- name: Check if the vagrant plugin vagrant-libvirt is installed
  shell: |
    set -o pipefail
    vagrant status
  args:
    executable: /bin/bash
    chdir: "{{ role_path }}"
  register: plugin_check
  changed_when: plugin_check.rc == 0
  failed_when: plugin_check.rc != 0 and plugin_check.rc != 1
  run_once: true
  when:
    - force_install_zip|bool

- name: Install vagrant-libvirt build dependencies
  become: yes
  become_method: sudo
  zypper:
    name:
      - qemu
      - libvirt
      - libvirt-devel
      - ruby-devel
      - gcc
      - qemu-kvm
    state: present
  when:
    - force_install_zip|bool
    - plugin_check.rc != 0

- name: Installs the libvirt vagrant plugin
  command: "vagrant plugin install vagrant-libvirt"
  register: cmd_done
  changed_when: "cmd_done.rc == 0"
  when:
    - force_install_zip|bool
    - force_install_if_present|bool or vagrant_present.rc != 0

- name: Install the timezone vagrant plugin
  command: "vagrant plugin install vagrant-timezone"
  register: cmd_done
  changed_when: "cmd_done.rc == 0"
  when:
    - force_install_zip|bool
    - force_install_if_present|bool or vagrant_present.rc != 0
